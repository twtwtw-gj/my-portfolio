{"version":3,"file":"950-f1121fef7c2a246f48b4.js","mappings":"6NAgBgBA,EAAAA,EAedC,EACAC,EACAC,GAAA,IAfEC,EAAAJ,EAAAK,MACAC,EAAAN,EAAAO,QACAC,EAAAR,EAAAS,UACAC,EAAAV,EAAAW,SACAC,EAAAZ,EAAAa,eACAC,EAAAd,EAAAe,IACAC,EAAAhB,EAAAiB,aAAAC,EAAAlB,EACAmB,SAAAC,OAAA,IAAAF,EAAW,CAAC,EAADA,EACXG,EAAArB,EAAAsB,eACAC,EAAAvB,EAAAwB,gBAAAC,EAAAzB,EACA0B,UAAAC,OAAA,IAAAF,EAAA,QAAAA,EACGG,GAAAC,EAAAA,EAAAA,GAAA7B,EAAA,4IAOH8B,EAME1B,EANF2B,MACAC,EAKE5B,EALF6B,OACAC,EAIE9B,EAJF+B,OACAC,EAGEhC,EAHFiC,OACAC,EAEElC,EAFFmC,YACiBC,EACfpC,EADFoB,gBAGIiB,EAAWC,KAAKC,UAAUP,GAEhChB,GAAAwB,EAAAA,EAAAA,GAAA,CACElB,UAAAC,EACAL,eAAAD,EACAG,gBAAAD,GACGH,GAGL,IAAMyB,EACJC,EAAAA,cAACC,EAAAA,EAAA,CAAcZ,OAAQD,EAAQH,MAAOD,EAAOG,OAAQD,GACnDc,EAAAA,cAACE,EAAAA,EAAAC,OAAAC,OAAA,IACKC,EAAAA,EAAAA,GACFb,EACA5B,EACAwB,EACAJ,EACAE,EACAQ,EACAb,EACAN,KAIJyB,EAAAA,cAACM,EAAAA,EAAAH,OAAAC,OAAA,GACMtB,EAAA,CACLG,MAAOD,EACPG,OAAQD,EACRqB,UAAWrC,IACPsC,EAAAA,EAAAA,GACF9C,EACAE,EACA0B,EACA9B,EACAM,EACA6B,EACA3B,EACAM,MAaR,OAPInB,EAAKsD,WAEUrD,EAASqD,SAAWpD,EAAaoD,QAAUC,EAAAA,OAASC,EAAAA,SAC5DZ,EAAW5C,EAAKsD,SACzBrD,EAASqD,SAAA,GAAU,WAIftD,EAAKsD,UACPC,EAAAA,EAAAA,QAAQ,KAAkCvD,EAAKsD,QAAA,E","sources":["webpack://my-portfolio/../src/components/lazy-hydrate.tsx"],"sourcesContent":["import React, { MutableRefObject } from \"react\"\nimport { hydrate, render } from \"react-dom\"\nimport { GatsbyImageProps } from \"./gatsby-image.browser\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImageProps, MainImage } from \"./main-image\"\nimport { getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { ReactElement } from \"react\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean // alwaystype SetStateAction<S> = S | ((prevState: S) => S);\n  toggleIsLoaded: (toggle: boolean) => void\n  ref: MutableRefObject<HTMLImageElement | undefined>\n}\n\nexport function lazyHydrate(\n  {\n    image,\n    loading,\n    isLoading,\n    isLoaded,\n    toggleIsLoaded,\n    ref,\n    imgClassName,\n    imgStyle = {},\n    objectPosition,\n    backgroundColor,\n    objectFit = `cover`,\n    ...props\n  }: LazyHydrateProps,\n  root: MutableRefObject<HTMLElement | undefined>,\n  hydrated: MutableRefObject<boolean>,\n  forceHydrate: MutableRefObject<boolean>\n): (() => void) | null {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  const cacheKey = JSON.stringify(images)\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const component = (\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      <Placeholder\n        {...getPlaceholderProps(\n          placeholder,\n          isLoaded,\n          layout,\n          width,\n          height,\n          wrapperBackgroundColor,\n          objectFit,\n          objectPosition\n        )}\n      />\n\n      <MainImage\n        {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n        width={width}\n        height={height}\n        className={imgClassName}\n        {...getMainProps(\n          isLoading,\n          isLoaded,\n          images,\n          loading,\n          toggleIsLoaded,\n          cacheKey,\n          ref,\n          imgStyle\n        )}\n      />\n    </LayoutWrapper>\n  )\n\n  if (root.current) {\n    // Force render to mitigate \"Expected server HTML to contain a matching\" in develop\n    const doRender = hydrated.current || forceHydrate.current ? render : hydrate\n    doRender(component, root.current)\n    hydrated.current = true\n  }\n\n  return (): void => {\n    if (root.current) {\n      render((null as unknown) as ReactElement, root.current)\n    }\n  }\n}\n"],"names":["m","d","l","u","b","image","p","loading","h","isLoading","j","isLoaded","f","toggleIsLoaded","L","ref","y","imgClassName","C","imgStyle","v","k","objectPosition","w","backgroundColor","N","objectFit","P","E","e","F","width","O","height","S","layout","x","images","I","placeholder","J","M","JSON","stringify","o","_","c","t","r","Object","assign","a","i","className","s","current","n","g"],"sourceRoot":""}